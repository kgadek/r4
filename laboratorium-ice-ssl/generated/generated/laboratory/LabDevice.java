// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `LabDevice.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package generated.laboratory;

public class LabDevice implements java.lang.Cloneable, java.io.Serializable
{
    public String deviceName;

    public String type;

    public boolean used;

    public LabDevice()
    {
    }

    public LabDevice(String deviceName, String type, boolean used)
    {
        this.deviceName = deviceName;
        this.type = type;
        this.used = used;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        LabDevice _r = null;
        try
        {
            _r = (LabDevice)rhs;
        }
        catch(ClassCastException ex)
        {
        }

        if(_r != null)
        {
            if(deviceName != _r.deviceName)
            {
                if(deviceName == null || _r.deviceName == null || !deviceName.equals(_r.deviceName))
                {
                    return false;
                }
            }
            if(type != _r.type)
            {
                if(type == null || _r.type == null || !type.equals(_r.type))
                {
                    return false;
                }
            }
            if(used != _r.used)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 0;
        if(deviceName != null)
        {
            __h = 5 * __h + deviceName.hashCode();
        }
        if(type != null)
        {
            __h = 5 * __h + type.hashCode();
        }
        __h = 5 * __h + (used ? 1 : 0);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(deviceName);
        __os.writeString(type);
        __os.writeBool(used);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        deviceName = __is.readString();
        type = __is.readString();
        used = __is.readBool();
    }
}
